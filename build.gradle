apply plugin: "java"
version = "0.2"

sourceSets {
    main {
        java { srcDirs = ["src"] }
    }
    app {
        resources { srcDirs = ["resources"] }
    }
}

compileJava {
    options.compilerArgs << "-XDignore.symbol.file=true" << "-Xlint:unchecked"
    options.fork = true
    options.forkOptions.executable = 'javac'
}

def mainClass = "org.jchmlib.app.ChmWebApp"

task appJar(type: Jar) {
    baseName = "ChmWeb"

    manifest {
        attributes(
                "Implementation-Title": "ChmWeb",
                "Implementation-Version": version,
                "Main-Class": mainClass)
    }

    from(sourceSets.main.output)
    from(sourceSets.app.resources)
}

task libJar(type: Jar) {
    baseName = "jchmlib"

    manifest {
        attributes(
                "Implementation-Title": "jchmlib",
                "Implementation-Version": version)
    }

    from(sourceSets.main.output) {
        exclude "org/jchmlib/app/**"
    }
}

jar {
    // reset actions
    actions = []
    // add your action that performs the work based
    // on the configuration (e.g. 'source') of this task
    doLast {
        println "jar"
    }
}

jar.dependsOn libJar, appJar

// $(/usr/libexec/java_home)/bin/javapackager -deploy -native dmg -srcfiles build/libs/ChmWeb-0.2.jar -appclass org.jchmlib.app.ChmWebApp -name ChmWeb -outdir build/deploy -outfile ChmWeb -v -BappVersion=0.2

task dmg(dependsOn: appJar) {
    def buildDir = "build"
    def appName = "ChmWeb"
    def jarFile = "${buildDir}/libs/ChmWeb-${version}.jar"

    file("${buildDir}/deploy").mkdirs()

    println System.getProperty("java.home")+"/../bin/javapackager"

    doLast { exec {
        executable System.getProperty("java.home")+"/../bin/javapackager"
        args "-deploy",
             "-title", appName,
             "-name", appName,
             "-appclass", mainClass,
             "-native", "dmg",
             "-outdir", "$buildDir/deploy",
             "-outfile", appName,
             "-srcfiles", jarFile,
             "-BappVersion=$version",
             "-verbose"
    }}
}

repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
}

dependencies {
    // to compile Mac specific classes on non-Mac platform
    compileOnly 'com.yuvimasory:orange-extensions:1.3.0'
}

